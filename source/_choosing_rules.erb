<h2 id="choosing-rules-to-run">Choosing which rules to run</h2>
<p>
  Foodcritic comes with a bunch of rules built-in. You will probably find
  some of them useful and others annoying. The trick to only running the
  rules you actually care about are what foodcritic calls <b>tags</b>.
</p>

<h3>Tags</h3>
<p>
  Each rule has a number of associated tags. You can filter which rules are
  actually checked by specifying the tags that you want to apply at the
  command line.

<h4>Only check against correctness rules</h4>
<p>
  As an example, the following arguments will run foodcritic
  but only showing warnings for rules tagged with the <code>correctness</code> tag.
</p>
<code>$ foodcritic -t correctness</code>

<h4>Excluding a particular rule</h4>
<p>
  Each rule is tagged with its own code, normally something like
  <code>FC123</code>. To avoid checking a particular rule use the
  <code>~</code> (tilde) modifier at the command line.
</p>
<code>$ foodcritic -t ~FC002</code>

<h4>Running only rules tagged with both tags</h4>
<p>
  Let's say we want to only check against rules that are tagged with
  <b>both</b> <code>style</code> and <code>services</code>. We don't want to
  check against rules that have only one or the other. Our command line to do
  this would look like this:
</p>
<code>$ foodcritic -t style -t services</code>

<h4>Running rules tagged with either tag</h4>
<p>
  Alternatively we might want to run rules that are tagged with either
  <code>style</code> or <code>services</code>. To do this we separate the
  rule codes with a comma:
</p>
<code>$ foodcritic -t style,services</code>

<h3 id="tag-reference">Tag Reference</h3>
<p>
  Below is the list of built-in foodcritic rules shown by tag:
</p>

<%= partial "rules_by_tag" %>

<h3>Disabling Rules and Tags Inline</h3>
<p>
  Disabling certain tags is useful on the command line, but what if you
  need to disable a tag or a particular rule for just a single part of a recipe?
  Foodcritic allows you to disable individual rules or tags using a special
  code comment.
</p>

<h4>Disabling FC033 for a single template resource</h4>
<% code("ruby") do %>
template 'my_awesome_template' do # ~FC033
  source 'path/to/template'
end
<% end %>

<h3>Enabling and Disabling Tags Per Cookbook</h4>
<p>
  Foodcritic tags can be enabled or disabled by including a <code>.foodcritic</code>
  file at the root of your cookbook directory. Within this file you can tags
  or rules similar to how you would do on the command line.
</p>

<h4>Enabling style and services</h3>

<p>
  To check rules with the style or services tag you would create a .foodcritic
  file containing <code>style,services</code>. For example:
  <code>$ echo "style,services" &gt; my_cookbook/.foodcritic</code>
</p>

<h4>Disabling Just FC016</h3>

<p>
  To disable just a single rule such as FC016 create a .foodcritic file
  containing <code>~FC016</code>. For example: <code>$ echo "~FC016" &gt; my_cookbook/.foodcritic</code>
</p>
